'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Database1datacontext
	
	Partial Public Class SINAVSORU
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
  Partial Private Sub InsertBASLIK(instance As BASLIK)
    End Sub
  Partial Private Sub UpdateBASLIK(instance As BASLIK)
    End Sub
  Partial Private Sub DeleteBASLIK(instance As BASLIK)
    End Sub
  Partial Private Sub InsertLOGIN(instance As LOGIN)
    End Sub
  Partial Private Sub UpdateLOGIN(instance As LOGIN)
    End Sub
  Partial Private Sub DeleteLOGIN(instance As LOGIN)
    End Sub
  Partial Private Sub InsertMANUELSORULAR(instance As MANUELSORULAR)
    End Sub
  Partial Private Sub UpdateMANUELSORULAR(instance As MANUELSORULAR)
    End Sub
  Partial Private Sub DeleteMANUELSORULAR(instance As MANUELSORULAR)
    End Sub
  Partial Private Sub InsertRASTGELESORULAR(instance As RASTGELESORULAR)
    End Sub
  Partial Private Sub UpdateRASTGELESORULAR(instance As RASTGELESORULAR)
    End Sub
  Partial Private Sub DeleteRASTGELESORULAR(instance As RASTGELESORULAR)
    End Sub
  Partial Private Sub InsertSORULAR(instance As SORULAR)
    End Sub
  Partial Private Sub UpdateSORULAR(instance As SORULAR)
    End Sub
  Partial Private Sub DeleteSORULAR(instance As SORULAR)
    End Sub
    #End Region
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property BASLIKs() As System.Data.Linq.Table(Of BASLIK)
			Get
				Return Me.GetTable(Of BASLIK)
			End Get
		End Property
		
		Public ReadOnly Property LOGINs() As System.Data.Linq.Table(Of LOGIN)
			Get
				Return Me.GetTable(Of LOGIN)
			End Get
		End Property
		
		Public ReadOnly Property MANUELSORULARs() As System.Data.Linq.Table(Of MANUELSORULAR)
			Get
				Return Me.GetTable(Of MANUELSORULAR)
			End Get
		End Property
		
		Public ReadOnly Property RASTGELESORULARs() As System.Data.Linq.Table(Of RASTGELESORULAR)
			Get
				Return Me.GetTable(Of RASTGELESORULAR)
			End Get
		End Property
		
		Public ReadOnly Property SORULARs() As System.Data.Linq.Table(Of SORULAR)
			Get
				Return Me.GetTable(Of SORULAR)
			End Get
		End Property
	End Class
End Namespace


<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class BASLIK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BASLIK1 As String
	
	Private _SORUSAY As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBASLIK1Changing(value As String)
    End Sub
    Partial Private Sub OnBASLIK1Changed()
    End Sub
    Partial Private Sub OnSORUSAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSORUSAYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="BASLIK", Storage:="_BASLIK1", DbType:="NVarChar(250)")>  _
	Public Property BASLIK1() As String
		Get
			Return Me._BASLIK1
		End Get
		Set
			If (String.Equals(Me._BASLIK1, value) = false) Then
				Me.OnBASLIK1Changing(value)
				Me.SendPropertyChanging
				Me._BASLIK1 = value
				Me.SendPropertyChanged("BASLIK1")
				Me.OnBASLIK1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORUSAY", DbType:="Int")>  _
	Public Property SORUSAY() As System.Nullable(Of Integer)
		Get
			Return Me._SORUSAY
		End Get
		Set
			If (Me._SORUSAY.Equals(value) = false) Then
				Me.OnSORUSAYChanging(value)
				Me.SendPropertyChanging
				Me._SORUSAY = value
				Me.SendPropertyChanged("SORUSAY")
				Me.OnSORUSAYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class LOGIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _KULLANICI As String
	
	Private _SİFRE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnKULLANICIChanging(value As String)
    End Sub
    Partial Private Sub OnKULLANICIChanged()
    End Sub
    Partial Private Sub OnSİFREChanging(value As String)
    End Sub
    Partial Private Sub OnSİFREChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KULLANICI", DbType:="NVarChar(100)")>  _
	Public Property KULLANICI() As String
		Get
			Return Me._KULLANICI
		End Get
		Set
			If (String.Equals(Me._KULLANICI, value) = false) Then
				Me.OnKULLANICIChanging(value)
				Me.SendPropertyChanging
				Me._KULLANICI = value
				Me.SendPropertyChanged("KULLANICI")
				Me.OnKULLANICIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SİFRE", DbType:="NVarChar(100)")>  _
	Public Property SİFRE() As String
		Get
			Return Me._SİFRE
		End Get
		Set
			If (String.Equals(Me._SİFRE, value) = false) Then
				Me.OnSİFREChanging(value)
				Me.SendPropertyChanging
				Me._SİFRE = value
				Me.SendPropertyChanged("SİFRE")
				Me.OnSİFREChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class MANUELSORULAR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BASLIKID As System.Nullable(Of Integer)
	
	Private _BASLIK As String
	
	Private _SORU As String
	
	Private _CEVAPAHARF As String
	
	Private _CEVAPA As String
	
	Private _CEVAPBHARF As String
	
	Private _CEVAPB As String
	
	Private _CEVAPCHARF As String
	
	Private _CEVAPC As String
	
	Private _CEVAPDHARF As String
	
	Private _CEVAPD As String
	
	Private _DOGRUSIK As String
	
	Private _CEVAP_COZ_A As String
	
	Private _CEVAP_COZ_B As String
	
	Private _CEVAP_COZ_C As String
	
	Private _CEVAP_COZ_D As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBASLIKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBASLIKIDChanged()
    End Sub
    Partial Private Sub OnBASLIKChanging(value As String)
    End Sub
    Partial Private Sub OnBASLIKChanged()
    End Sub
    Partial Private Sub OnSORUChanging(value As String)
    End Sub
    Partial Private Sub OnSORUChanged()
    End Sub
    Partial Private Sub OnCEVAPAHARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPAHARFChanged()
    End Sub
    Partial Private Sub OnCEVAPAChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPAChanged()
    End Sub
    Partial Private Sub OnCEVAPBHARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPBHARFChanged()
    End Sub
    Partial Private Sub OnCEVAPBChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPBChanged()
    End Sub
    Partial Private Sub OnCEVAPCHARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPCHARFChanged()
    End Sub
    Partial Private Sub OnCEVAPCChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPCChanged()
    End Sub
    Partial Private Sub OnCEVAPDHARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPDHARFChanged()
    End Sub
    Partial Private Sub OnCEVAPDChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAPDChanged()
    End Sub
    Partial Private Sub OnDOGRUSIKChanging(value As String)
    End Sub
    Partial Private Sub OnDOGRUSIKChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_AChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_COZ_AChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_BChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_COZ_BChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_CChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_COZ_CChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_DChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_COZ_DChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIKID", DbType:="Int")>  _
	Public Property BASLIKID() As System.Nullable(Of Integer)
		Get
			Return Me._BASLIKID
		End Get
		Set
			If (Me._BASLIKID.Equals(value) = false) Then
				Me.OnBASLIKIDChanging(value)
				Me.SendPropertyChanging
				Me._BASLIKID = value
				Me.SendPropertyChanged("BASLIKID")
				Me.OnBASLIKIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIK", DbType:="NVarChar(300)")>  _
	Public Property BASLIK() As String
		Get
			Return Me._BASLIK
		End Get
		Set
			If (String.Equals(Me._BASLIK, value) = false) Then
				Me.OnBASLIKChanging(value)
				Me.SendPropertyChanging
				Me._BASLIK = value
				Me.SendPropertyChanged("BASLIK")
				Me.OnBASLIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORU", DbType:="NVarChar(500)")>  _
	Public Property SORU() As String
		Get
			Return Me._SORU
		End Get
		Set
			If (String.Equals(Me._SORU, value) = false) Then
				Me.OnSORUChanging(value)
				Me.SendPropertyChanging
				Me._SORU = value
				Me.SendPropertyChanged("SORU")
				Me.OnSORUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPAHARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAPAHARF() As String
		Get
			Return Me._CEVAPAHARF
		End Get
		Set
			If (String.Equals(Me._CEVAPAHARF, value) = false) Then
				Me.OnCEVAPAHARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPAHARF = value
				Me.SendPropertyChanged("CEVAPAHARF")
				Me.OnCEVAPAHARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPA", DbType:="NVarChar(100)")>  _
	Public Property CEVAPA() As String
		Get
			Return Me._CEVAPA
		End Get
		Set
			If (String.Equals(Me._CEVAPA, value) = false) Then
				Me.OnCEVAPAChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPA = value
				Me.SendPropertyChanged("CEVAPA")
				Me.OnCEVAPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPBHARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAPBHARF() As String
		Get
			Return Me._CEVAPBHARF
		End Get
		Set
			If (String.Equals(Me._CEVAPBHARF, value) = false) Then
				Me.OnCEVAPBHARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPBHARF = value
				Me.SendPropertyChanged("CEVAPBHARF")
				Me.OnCEVAPBHARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPB", DbType:="NVarChar(100)")>  _
	Public Property CEVAPB() As String
		Get
			Return Me._CEVAPB
		End Get
		Set
			If (String.Equals(Me._CEVAPB, value) = false) Then
				Me.OnCEVAPBChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPB = value
				Me.SendPropertyChanged("CEVAPB")
				Me.OnCEVAPBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPCHARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAPCHARF() As String
		Get
			Return Me._CEVAPCHARF
		End Get
		Set
			If (String.Equals(Me._CEVAPCHARF, value) = false) Then
				Me.OnCEVAPCHARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPCHARF = value
				Me.SendPropertyChanged("CEVAPCHARF")
				Me.OnCEVAPCHARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPC", DbType:="NVarChar(100)")>  _
	Public Property CEVAPC() As String
		Get
			Return Me._CEVAPC
		End Get
		Set
			If (String.Equals(Me._CEVAPC, value) = false) Then
				Me.OnCEVAPCChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPC = value
				Me.SendPropertyChanged("CEVAPC")
				Me.OnCEVAPCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPDHARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAPDHARF() As String
		Get
			Return Me._CEVAPDHARF
		End Get
		Set
			If (String.Equals(Me._CEVAPDHARF, value) = false) Then
				Me.OnCEVAPDHARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPDHARF = value
				Me.SendPropertyChanged("CEVAPDHARF")
				Me.OnCEVAPDHARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAPD", DbType:="NVarChar(100)")>  _
	Public Property CEVAPD() As String
		Get
			Return Me._CEVAPD
		End Get
		Set
			If (String.Equals(Me._CEVAPD, value) = false) Then
				Me.OnCEVAPDChanging(value)
				Me.SendPropertyChanging
				Me._CEVAPD = value
				Me.SendPropertyChanged("CEVAPD")
				Me.OnCEVAPDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOGRUSIK", DbType:="NVarChar(100)")>  _
	Public Property DOGRUSIK() As String
		Get
			Return Me._DOGRUSIK
		End Get
		Set
			If (String.Equals(Me._DOGRUSIK, value) = false) Then
				Me.OnDOGRUSIKChanging(value)
				Me.SendPropertyChanging
				Me._DOGRUSIK = value
				Me.SendPropertyChanged("DOGRUSIK")
				Me.OnDOGRUSIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_A", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_COZ_A() As String
		Get
			Return Me._CEVAP_COZ_A
		End Get
		Set
			If (String.Equals(Me._CEVAP_COZ_A, value) = false) Then
				Me.OnCEVAP_COZ_AChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_A = value
				Me.SendPropertyChanged("CEVAP_COZ_A")
				Me.OnCEVAP_COZ_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_B", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_COZ_B() As String
		Get
			Return Me._CEVAP_COZ_B
		End Get
		Set
			If (String.Equals(Me._CEVAP_COZ_B, value) = false) Then
				Me.OnCEVAP_COZ_BChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_B = value
				Me.SendPropertyChanged("CEVAP_COZ_B")
				Me.OnCEVAP_COZ_BChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_C", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_COZ_C() As String
		Get
			Return Me._CEVAP_COZ_C
		End Get
		Set
			If (String.Equals(Me._CEVAP_COZ_C, value) = false) Then
				Me.OnCEVAP_COZ_CChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_C = value
				Me.SendPropertyChanged("CEVAP_COZ_C")
				Me.OnCEVAP_COZ_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_D", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_COZ_D() As String
		Get
			Return Me._CEVAP_COZ_D
		End Get
		Set
			If (String.Equals(Me._CEVAP_COZ_D, value) = false) Then
				Me.OnCEVAP_COZ_DChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_D = value
				Me.SendPropertyChanged("CEVAP_COZ_D")
				Me.OnCEVAP_COZ_DChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class RASTGELESORULAR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BASLIKID As System.Nullable(Of Integer)
	
	Private _BASLIK As String
	
	Private _SORU As String
	
	Private _CEVAP_A_HARF As String
	
	Private _CEVAP_A As String
	
	Private _CEVAP_B_HARF As String
	
	Private _CEVAP_B As String
	
	Private _CEVAP_C_HARF As String
	
	Private _CEVAP_C As String
	
	Private _CEVAP_D_HARF As String
	
	Private _CEVAP_D As String
	
	Private _DOGRUSIK As String
	
	Private _BASLIKNO As System.Nullable(Of Integer)
	
	Private _SORUNO As System.Nullable(Of Integer)
	
	Private _CEVAP_COZ_A As System.Nullable(Of Boolean)
	
	Private _CEVAP_COZ_B As System.Nullable(Of Boolean)
	
	Private _CEVAP_COZ_C As System.Nullable(Of Boolean)
	
	Private _CEVAP_COZ_D As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBASLIKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBASLIKIDChanged()
    End Sub
    Partial Private Sub OnBASLIKChanging(value As String)
    End Sub
    Partial Private Sub OnBASLIKChanged()
    End Sub
    Partial Private Sub OnSORUChanging(value As String)
    End Sub
    Partial Private Sub OnSORUChanged()
    End Sub
    Partial Private Sub OnCEVAP_A_HARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_A_HARFChanged()
    End Sub
    Partial Private Sub OnCEVAP_AChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_AChanged()
    End Sub
    Partial Private Sub OnCEVAP_B_HARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_B_HARFChanged()
    End Sub
    Partial Private Sub OnCEVAP_BChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_BChanged()
    End Sub
    Partial Private Sub OnCEVAP_C_HARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_C_HARFChanged()
    End Sub
    Partial Private Sub OnCEVAP_CChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_CChanged()
    End Sub
    Partial Private Sub OnCEVAP_D_HARFChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_D_HARFChanged()
    End Sub
    Partial Private Sub OnCEVAP_DChanging(value As String)
    End Sub
    Partial Private Sub OnCEVAP_DChanged()
    End Sub
    Partial Private Sub OnDOGRUSIKChanging(value As String)
    End Sub
    Partial Private Sub OnDOGRUSIKChanged()
    End Sub
    Partial Private Sub OnBASLIKNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBASLIKNOChanged()
    End Sub
    Partial Private Sub OnSORUNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSORUNOChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_AChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCEVAP_COZ_AChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_BChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCEVAP_COZ_BChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_CChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCEVAP_COZ_CChanged()
    End Sub
    Partial Private Sub OnCEVAP_COZ_DChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCEVAP_COZ_DChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIKID", DbType:="Int")>  _
	Public Property BASLIKID() As System.Nullable(Of Integer)
		Get
			Return Me._BASLIKID
		End Get
		Set
			If (Me._BASLIKID.Equals(value) = false) Then
				Me.OnBASLIKIDChanging(value)
				Me.SendPropertyChanging
				Me._BASLIKID = value
				Me.SendPropertyChanged("BASLIKID")
				Me.OnBASLIKIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIK", DbType:="NVarChar(300)")>  _
	Public Property BASLIK() As String
		Get
			Return Me._BASLIK
		End Get
		Set
			If (String.Equals(Me._BASLIK, value) = false) Then
				Me.OnBASLIKChanging(value)
				Me.SendPropertyChanging
				Me._BASLIK = value
				Me.SendPropertyChanged("BASLIK")
				Me.OnBASLIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORU", DbType:="NVarChar(500)")>  _
	Public Property SORU() As String
		Get
			Return Me._SORU
		End Get
		Set
			If (String.Equals(Me._SORU, value) = false) Then
				Me.OnSORUChanging(value)
				Me.SendPropertyChanging
				Me._SORU = value
				Me.SendPropertyChanged("SORU")
				Me.OnSORUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_A_HARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_A_HARF() As String
		Get
			Return Me._CEVAP_A_HARF
		End Get
		Set
			If (String.Equals(Me._CEVAP_A_HARF, value) = false) Then
				Me.OnCEVAP_A_HARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_A_HARF = value
				Me.SendPropertyChanged("CEVAP_A_HARF")
				Me.OnCEVAP_A_HARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_A", DbType:="NVarChar(500)")>  _
	Public Property CEVAP_A() As String
		Get
			Return Me._CEVAP_A
		End Get
		Set
			If (String.Equals(Me._CEVAP_A, value) = false) Then
				Me.OnCEVAP_AChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_A = value
				Me.SendPropertyChanged("CEVAP_A")
				Me.OnCEVAP_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_B_HARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_B_HARF() As String
		Get
			Return Me._CEVAP_B_HARF
		End Get
		Set
			If (String.Equals(Me._CEVAP_B_HARF, value) = false) Then
				Me.OnCEVAP_B_HARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_B_HARF = value
				Me.SendPropertyChanged("CEVAP_B_HARF")
				Me.OnCEVAP_B_HARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_B", DbType:="NVarChar(500)")>  _
	Public Property CEVAP_B() As String
		Get
			Return Me._CEVAP_B
		End Get
		Set
			If (String.Equals(Me._CEVAP_B, value) = false) Then
				Me.OnCEVAP_BChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_B = value
				Me.SendPropertyChanged("CEVAP_B")
				Me.OnCEVAP_BChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_C_HARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_C_HARF() As String
		Get
			Return Me._CEVAP_C_HARF
		End Get
		Set
			If (String.Equals(Me._CEVAP_C_HARF, value) = false) Then
				Me.OnCEVAP_C_HARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_C_HARF = value
				Me.SendPropertyChanged("CEVAP_C_HARF")
				Me.OnCEVAP_C_HARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_C", DbType:="NVarChar(500)")>  _
	Public Property CEVAP_C() As String
		Get
			Return Me._CEVAP_C
		End Get
		Set
			If (String.Equals(Me._CEVAP_C, value) = false) Then
				Me.OnCEVAP_CChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_C = value
				Me.SendPropertyChanged("CEVAP_C")
				Me.OnCEVAP_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_D_HARF", DbType:="NVarChar(100)")>  _
	Public Property CEVAP_D_HARF() As String
		Get
			Return Me._CEVAP_D_HARF
		End Get
		Set
			If (String.Equals(Me._CEVAP_D_HARF, value) = false) Then
				Me.OnCEVAP_D_HARFChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_D_HARF = value
				Me.SendPropertyChanged("CEVAP_D_HARF")
				Me.OnCEVAP_D_HARFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_D", DbType:="NVarChar(500)")>  _
	Public Property CEVAP_D() As String
		Get
			Return Me._CEVAP_D
		End Get
		Set
			If (String.Equals(Me._CEVAP_D, value) = false) Then
				Me.OnCEVAP_DChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_D = value
				Me.SendPropertyChanged("CEVAP_D")
				Me.OnCEVAP_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOGRUSIK", DbType:="NVarChar(100)")>  _
	Public Property DOGRUSIK() As String
		Get
			Return Me._DOGRUSIK
		End Get
		Set
			If (String.Equals(Me._DOGRUSIK, value) = false) Then
				Me.OnDOGRUSIKChanging(value)
				Me.SendPropertyChanging
				Me._DOGRUSIK = value
				Me.SendPropertyChanged("DOGRUSIK")
				Me.OnDOGRUSIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIKNO", DbType:="Int")>  _
	Public Property BASLIKNO() As System.Nullable(Of Integer)
		Get
			Return Me._BASLIKNO
		End Get
		Set
			If (Me._BASLIKNO.Equals(value) = false) Then
				Me.OnBASLIKNOChanging(value)
				Me.SendPropertyChanging
				Me._BASLIKNO = value
				Me.SendPropertyChanged("BASLIKNO")
				Me.OnBASLIKNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORUNO", DbType:="Int")>  _
	Public Property SORUNO() As System.Nullable(Of Integer)
		Get
			Return Me._SORUNO
		End Get
		Set
			If (Me._SORUNO.Equals(value) = false) Then
				Me.OnSORUNOChanging(value)
				Me.SendPropertyChanging
				Me._SORUNO = value
				Me.SendPropertyChanged("SORUNO")
				Me.OnSORUNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_A", DbType:="Bit")>  _
	Public Property CEVAP_COZ_A() As System.Nullable(Of Boolean)
		Get
			Return Me._CEVAP_COZ_A
		End Get
		Set
			If (Me._CEVAP_COZ_A.Equals(value) = false) Then
				Me.OnCEVAP_COZ_AChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_A = value
				Me.SendPropertyChanged("CEVAP_COZ_A")
				Me.OnCEVAP_COZ_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_B", DbType:="Bit")>  _
	Public Property CEVAP_COZ_B() As System.Nullable(Of Boolean)
		Get
			Return Me._CEVAP_COZ_B
		End Get
		Set
			If (Me._CEVAP_COZ_B.Equals(value) = false) Then
				Me.OnCEVAP_COZ_BChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_B = value
				Me.SendPropertyChanged("CEVAP_COZ_B")
				Me.OnCEVAP_COZ_BChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_C", DbType:="Bit")>  _
	Public Property CEVAP_COZ_C() As System.Nullable(Of Boolean)
		Get
			Return Me._CEVAP_COZ_C
		End Get
		Set
			If (Me._CEVAP_COZ_C.Equals(value) = false) Then
				Me.OnCEVAP_COZ_CChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_C = value
				Me.SendPropertyChanged("CEVAP_COZ_C")
				Me.OnCEVAP_COZ_CChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEVAP_COZ_D", DbType:="Bit")>  _
	Public Property CEVAP_COZ_D() As System.Nullable(Of Boolean)
		Get
			Return Me._CEVAP_COZ_D
		End Get
		Set
			If (Me._CEVAP_COZ_D.Equals(value) = false) Then
				Me.OnCEVAP_COZ_DChanging(value)
				Me.SendPropertyChanging
				Me._CEVAP_COZ_D = value
				Me.SendPropertyChanged("CEVAP_COZ_D")
				Me.OnCEVAP_COZ_DChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute()>  _
Partial Public Class SORULAR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _BASLIK As String
	
	Private _CVPHARFA As String
	
	Private _CVPHARFB As String
	
	Private _CVPHARFC As String
	
	Private _CVPHARFD As String
	
	Private _CVPA As String
	
	Private _CVPB As String
	
	Private _CVPC As String
	
	Private _CVPD As String
	
	Private _CVPCOZA As System.Nullable(Of Boolean)
	
	Private _CVPCOZB As System.Nullable(Of Boolean)
	
	Private _CVPCOZC As System.Nullable(Of Boolean)
	
	Private _CVPCOZD As System.Nullable(Of Boolean)
	
	Private _CVPSIK As String
	
	Private _AKTIF As System.Nullable(Of Boolean)
	
	Private _BASLIKID As System.Nullable(Of Integer)
	
	Private _SORU As String
	
	Private _KULLANIM As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBASLIKChanging(value As String)
    End Sub
    Partial Private Sub OnBASLIKChanged()
    End Sub
    Partial Private Sub OnCVPHARFAChanging(value As String)
    End Sub
    Partial Private Sub OnCVPHARFAChanged()
    End Sub
    Partial Private Sub OnCVPHARFBChanging(value As String)
    End Sub
    Partial Private Sub OnCVPHARFBChanged()
    End Sub
    Partial Private Sub OnCVPHARFCChanging(value As String)
    End Sub
    Partial Private Sub OnCVPHARFCChanged()
    End Sub
    Partial Private Sub OnCVPHARFDChanging(value As String)
    End Sub
    Partial Private Sub OnCVPHARFDChanged()
    End Sub
    Partial Private Sub OnCVPAChanging(value As String)
    End Sub
    Partial Private Sub OnCVPAChanged()
    End Sub
    Partial Private Sub OnCVPBChanging(value As String)
    End Sub
    Partial Private Sub OnCVPBChanged()
    End Sub
    Partial Private Sub OnCVPCChanging(value As String)
    End Sub
    Partial Private Sub OnCVPCChanged()
    End Sub
    Partial Private Sub OnCVPDChanging(value As String)
    End Sub
    Partial Private Sub OnCVPDChanged()
    End Sub
    Partial Private Sub OnCVPCOZAChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCVPCOZAChanged()
    End Sub
    Partial Private Sub OnCVPCOZBChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCVPCOZBChanged()
    End Sub
    Partial Private Sub OnCVPCOZCChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCVPCOZCChanged()
    End Sub
    Partial Private Sub OnCVPCOZDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCVPCOZDChanged()
    End Sub
    Partial Private Sub OnCVPSIKChanging(value As String)
    End Sub
    Partial Private Sub OnCVPSIKChanged()
    End Sub
    Partial Private Sub OnAKTIFChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAKTIFChanged()
    End Sub
    Partial Private Sub OnBASLIKIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBASLIKIDChanged()
    End Sub
    Partial Private Sub OnSORUChanging(value As String)
    End Sub
    Partial Private Sub OnSORUChanged()
    End Sub
    Partial Private Sub OnKULLANIMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnKULLANIMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIK", DbType:="NVarChar(300)")>  _
	Public Property BASLIK() As String
		Get
			Return Me._BASLIK
		End Get
		Set
			If (String.Equals(Me._BASLIK, value) = false) Then
				Me.OnBASLIKChanging(value)
				Me.SendPropertyChanging
				Me._BASLIK = value
				Me.SendPropertyChanged("BASLIK")
				Me.OnBASLIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPHARFA", DbType:="NVarChar(300)")>  _
	Public Property CVPHARFA() As String
		Get
			Return Me._CVPHARFA
		End Get
		Set
			If (String.Equals(Me._CVPHARFA, value) = false) Then
				Me.OnCVPHARFAChanging(value)
				Me.SendPropertyChanging
				Me._CVPHARFA = value
				Me.SendPropertyChanged("CVPHARFA")
				Me.OnCVPHARFAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPHARFB", DbType:="NVarChar(300)")>  _
	Public Property CVPHARFB() As String
		Get
			Return Me._CVPHARFB
		End Get
		Set
			If (String.Equals(Me._CVPHARFB, value) = false) Then
				Me.OnCVPHARFBChanging(value)
				Me.SendPropertyChanging
				Me._CVPHARFB = value
				Me.SendPropertyChanged("CVPHARFB")
				Me.OnCVPHARFBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPHARFC", DbType:="NVarChar(300)")>  _
	Public Property CVPHARFC() As String
		Get
			Return Me._CVPHARFC
		End Get
		Set
			If (String.Equals(Me._CVPHARFC, value) = false) Then
				Me.OnCVPHARFCChanging(value)
				Me.SendPropertyChanging
				Me._CVPHARFC = value
				Me.SendPropertyChanged("CVPHARFC")
				Me.OnCVPHARFCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPHARFD", DbType:="NVarChar(300)")>  _
	Public Property CVPHARFD() As String
		Get
			Return Me._CVPHARFD
		End Get
		Set
			If (String.Equals(Me._CVPHARFD, value) = false) Then
				Me.OnCVPHARFDChanging(value)
				Me.SendPropertyChanging
				Me._CVPHARFD = value
				Me.SendPropertyChanged("CVPHARFD")
				Me.OnCVPHARFDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPA", DbType:="NVarChar(100)")>  _
	Public Property CVPA() As String
		Get
			Return Me._CVPA
		End Get
		Set
			If (String.Equals(Me._CVPA, value) = false) Then
				Me.OnCVPAChanging(value)
				Me.SendPropertyChanging
				Me._CVPA = value
				Me.SendPropertyChanged("CVPA")
				Me.OnCVPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPB", DbType:="NVarChar(100)")>  _
	Public Property CVPB() As String
		Get
			Return Me._CVPB
		End Get
		Set
			If (String.Equals(Me._CVPB, value) = false) Then
				Me.OnCVPBChanging(value)
				Me.SendPropertyChanging
				Me._CVPB = value
				Me.SendPropertyChanged("CVPB")
				Me.OnCVPBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPC", DbType:="NVarChar(100)")>  _
	Public Property CVPC() As String
		Get
			Return Me._CVPC
		End Get
		Set
			If (String.Equals(Me._CVPC, value) = false) Then
				Me.OnCVPCChanging(value)
				Me.SendPropertyChanging
				Me._CVPC = value
				Me.SendPropertyChanged("CVPC")
				Me.OnCVPCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPD", DbType:="NVarChar(100)")>  _
	Public Property CVPD() As String
		Get
			Return Me._CVPD
		End Get
		Set
			If (String.Equals(Me._CVPD, value) = false) Then
				Me.OnCVPDChanging(value)
				Me.SendPropertyChanging
				Me._CVPD = value
				Me.SendPropertyChanged("CVPD")
				Me.OnCVPDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPCOZA", DbType:="Bit")>  _
	Public Property CVPCOZA() As System.Nullable(Of Boolean)
		Get
			Return Me._CVPCOZA
		End Get
		Set
			If (Me._CVPCOZA.Equals(value) = false) Then
				Me.OnCVPCOZAChanging(value)
				Me.SendPropertyChanging
				Me._CVPCOZA = value
				Me.SendPropertyChanged("CVPCOZA")
				Me.OnCVPCOZAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPCOZB", DbType:="Bit")>  _
	Public Property CVPCOZB() As System.Nullable(Of Boolean)
		Get
			Return Me._CVPCOZB
		End Get
		Set
			If (Me._CVPCOZB.Equals(value) = false) Then
				Me.OnCVPCOZBChanging(value)
				Me.SendPropertyChanging
				Me._CVPCOZB = value
				Me.SendPropertyChanged("CVPCOZB")
				Me.OnCVPCOZBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPCOZC", DbType:="Bit")>  _
	Public Property CVPCOZC() As System.Nullable(Of Boolean)
		Get
			Return Me._CVPCOZC
		End Get
		Set
			If (Me._CVPCOZC.Equals(value) = false) Then
				Me.OnCVPCOZCChanging(value)
				Me.SendPropertyChanging
				Me._CVPCOZC = value
				Me.SendPropertyChanged("CVPCOZC")
				Me.OnCVPCOZCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPCOZD", DbType:="Bit")>  _
	Public Property CVPCOZD() As System.Nullable(Of Boolean)
		Get
			Return Me._CVPCOZD
		End Get
		Set
			If (Me._CVPCOZD.Equals(value) = false) Then
				Me.OnCVPCOZDChanging(value)
				Me.SendPropertyChanging
				Me._CVPCOZD = value
				Me.SendPropertyChanged("CVPCOZD")
				Me.OnCVPCOZDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CVPSIK", DbType:="NVarChar(100)")>  _
	Public Property CVPSIK() As String
		Get
			Return Me._CVPSIK
		End Get
		Set
			If (String.Equals(Me._CVPSIK, value) = false) Then
				Me.OnCVPSIKChanging(value)
				Me.SendPropertyChanging
				Me._CVPSIK = value
				Me.SendPropertyChanged("CVPSIK")
				Me.OnCVPSIKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AKTIF", DbType:="Bit")>  _
	Public Property AKTIF() As System.Nullable(Of Boolean)
		Get
			Return Me._AKTIF
		End Get
		Set
			If (Me._AKTIF.Equals(value) = false) Then
				Me.OnAKTIFChanging(value)
				Me.SendPropertyChanging
				Me._AKTIF = value
				Me.SendPropertyChanged("AKTIF")
				Me.OnAKTIFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASLIKID", DbType:="Int")>  _
	Public Property BASLIKID() As System.Nullable(Of Integer)
		Get
			Return Me._BASLIKID
		End Get
		Set
			If (Me._BASLIKID.Equals(value) = false) Then
				Me.OnBASLIKIDChanging(value)
				Me.SendPropertyChanging
				Me._BASLIKID = value
				Me.SendPropertyChanged("BASLIKID")
				Me.OnBASLIKIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SORU", DbType:="NVarChar(500)")>  _
	Public Property SORU() As String
		Get
			Return Me._SORU
		End Get
		Set
			If (String.Equals(Me._SORU, value) = false) Then
				Me.OnSORUChanging(value)
				Me.SendPropertyChanging
				Me._SORU = value
				Me.SendPropertyChanged("SORU")
				Me.OnSORUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KULLANIM", DbType:="Int")>  _
	Public Property KULLANIM() As System.Nullable(Of Integer)
		Get
			Return Me._KULLANIM
		End Get
		Set
			If (Me._KULLANIM.Equals(value) = false) Then
				Me.OnKULLANIMChanging(value)
				Me.SendPropertyChanging
				Me._KULLANIM = value
				Me.SendPropertyChanged("KULLANIM")
				Me.OnKULLANIMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
